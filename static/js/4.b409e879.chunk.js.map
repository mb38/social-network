{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/DialogItem/DialogItem.module.scss","components/Dialogs/Message/Message.module.scss","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","classes","name","Messages","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","Message","lg","values","sendMessageCreator","newMessageBody","compose","dispatch"],"mappings":"6NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAET,kBAACG,EAAcE,KAAKC,OAFI,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAqCL,K,oBChB9EM,EAAOC,QAAU,CAAC,cAAc,6BAA6B,kBAAkB,iCAAiC,iBAAiB,gCAAgC,KAAO,sBAAsB,IAAM,uB,oBCApMD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,OAAS,6B,oBCArED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,2B,mICYpDC,MATf,SAAoBN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACI,yBAAKC,UAAWC,IAAO,WACnB,kBAAC,IAAD,CAASD,UAAWC,IAAO,OAAYT,GAAIM,GAAOP,EAAMW,Q,kBCGrDC,MARf,SAAkBZ,GACd,OACI,yBAAKS,UAAWC,IAAO,WACnB,yBAAKD,UAAWC,IAAO,SAAcV,EAAMa,W,kCCqCvD,IAAMC,EAAeC,YAAiB,KAehCC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAbL,SAACjB,GACpB,OACI,0BAAMmB,SAAUnB,EAAMoB,aAAcX,UAAWC,IAAQ,mBACnD,kBAACW,EAAA,EAAD,CAAOC,UAAWC,IACXZ,KAAM,iBACNa,YAAa,qBACbC,SAAU,CAACC,IAAUZ,KAE5B,4BAAQL,UAAWC,IAAO,KAA1B,YAOGiB,EAnDf,SAAiB3B,GAEb,IAAIP,EAAQO,EAAM4B,YAEdC,EAAkBpC,EAAMqC,QACvBC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,GAAIwB,EAAExB,GAAIyB,IAAKD,EAAExB,GAAIG,KAAMqB,EAAErB,UAEpDuB,EAAmBzC,EAAM0C,SACxBJ,KAAK,SAAAK,GAAC,OAAI,kBAACC,EAAD,CAASxB,QAASuB,EAAEvB,QAASoB,IAAKG,EAAE5B,QAOnD,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK8B,GAAI,GACL,yBAAK7B,UAAWC,IAAQ,gBACnBmB,IAGT,kBAAC,IAAD,CAAKS,GAAI,IACL,yBAAK7B,UAAWC,IAAQ,gBACnBwB,EACD,yBAAKzB,UAAWC,IAAQ,oBACpB,kBAACM,EAAD,CAAqBG,SAfrB,SAACoB,GACjBvC,EAAMwC,mBAAmBD,EAAOE,wB,wBCHzBC,sBACXvC,aAZkB,SAACV,GACnB,MAAO,CACHmC,YAAanC,EAAMmC,gBAGF,SAACe,GACtB,MAAO,CACHH,mBAAoB,SAACC,GAAD,OAAoBE,EAASH,YAAmBC,SAMxE7C,IAFW8C,CAGbf","file":"static/js/4.b409e879.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />;\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog-item\":\"Dialogs_dialog-item__25ic4\",\"dialog-item-add\":\"Dialogs_dialog-item-add__3Qmeo\",\"form-container\":\"Dialogs_form-container__3B9c3\",\"text\":\"Dialogs_text__2gpgx\",\"btn\":\"Dialogs_btn__9ye6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DialogItem_container__u-ai7\",\"dialog\":\"DialogItem_dialog__2UDBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Message_container__34YFc\",\"message\":\"Message_message__1hmsB\"};","import React from 'react';\r\nimport classes from \"./DialogItem.module.scss\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction DialogItem(props) {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={classes['container']}>\r\n            <NavLink className={classes['dialog']} to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport classes from \"./Message.module.scss\";\r\n\r\nfunction Messages(props) {\r\n    return (\r\n        <div className={classes['container']}>\r\n            <div className={classes['message']}>{props.message}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {Row, Col} from 'antd';\r\nimport classes from \"./Dialogs.module.scss\";\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validations/validators\";\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map( d => <DialogItem id={d.id} key={d.id} name={d.name} /> );\r\n\r\n    let messagesElements = state.messages\r\n        .map( m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessageCreator(values.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col lg={4}>\r\n                <div className={classes['dialog-item']}>\r\n                    {dialogsElements}\r\n                </div>\r\n            </Col>\r\n            <Col lg={20}>\r\n                <div className={classes['dialog-item']}>\r\n                    {messagesElements}\r\n                    <div className={classes['dialog-item-add']}>\r\n                        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={classes['form-container']}>\r\n            <Field component={Textarea}\r\n                   name={'newMessageBody'}\r\n                   placeholder={'Enter your message'}\r\n                   validate={[required, maxLength100]}\r\n            />\r\n            <button className={classes['btn']}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: 'dialogsAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageCreator: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}